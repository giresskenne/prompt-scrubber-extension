// AUTO-GENERATED by build.mjs â€“ DO NOT EDIT
export const rules = [
  {
    id: "aws_access_key",
    pattern: new RegExp("(?<![A-Z0-9])[A-Z0-9]{20}(?![A-Z0-9])", "g"),
    replacer: () => "AKIA****************"
  },
  {
    id: "aws_secret_key",
    pattern: new RegExp("(?<![A-Za-z0-9\\/+=])[A-Za-z0-9\\/+=]{40}(?![A-Za-z0-9\\/+=])", "g"),
    replacer: () => "<AWS_SECRET_KEY-REDACTED>"
  },
  {
    id: "stripe_secret",
    pattern: new RegExp("(?:sk[-_](?:live|test)[-_]?[A-Za-z0-9]{20,})", "g"),
    replacer: () => "sk_********************"
  },
  {
    id: "credit_card",
    pattern: new RegExp("\\b(?:4\\d{3}(?:[- ]?\\d{4}){3}|(?:5[1-5]\\d{2}|22[2-9]\\d|2[3-6]\\d{2}|27[01]\\d|2720)(?:[- ]?\\d{4}){3}|3[47]\\d{2}[- ]?\\d{6}[- ]?\\d{5}|6(?:011|5\\d{2})(?:[- ]?\\d{4}){3})\\b", "g"),
    replacer: () => "<CREDIT_CARD-REDACTED>"
  },
  {
    id: "email",
    pattern: new RegExp("[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}", "i"),
    replacer: () => "<EMAIL-REDACTED>"
  },
  {
    id: "ipv4",
    pattern: new RegExp("\\b(?:(?:2(?:5[0-5]|[0-4][0-9])|1?[0-9]{1,2})\\.){3}(?:2(?:5[0-5]|[0-4][0-9])|1?[0-9]{1,2})\\b", "g"),
    replacer: () => "<IPV4-REDACTED>"
  },
  {
    id: "canadian_sin",
    pattern: new RegExp("\\b[0-9]{3}[- ]?[0-9]{3}[- ]?[0-9]{3}\\b", "g"),
    replacer: () => "<CANADIAN_SIN-REDACTED>"
  },
  {
    id: "us_social_security_number",
    pattern: new RegExp("\\b\\d{3}-?\\d{2}-?\\d{4}\\b", "g"),
    replacer: () => "<US_SOCIAL_SECURITY_NUMBER-REDACTED>"
  },
  {
    id: "us_phone_number",
    pattern: new RegExp("\\b\\(?\\d{3}\\)?[-. ]?\\d{3}[-. ]?\\d{4}\\b", "g"),
    replacer: () => "<US_PHONE_NUMBER-REDACTED>"
  },
  {
    id: "uk_national_insurance_number",
    pattern: new RegExp("\\b[A-Z]{2}[0-9]{6}[A-Z]?\\b", "g"),
    replacer: () => "<UK_NATIONAL_INSURANCE_NUMBER-REDACTED>"
  },
  {
    id: "uk_passport_number",
    pattern: new RegExp("\\b[A-PR-WY][0-9]{7}\\b", "g"),
    replacer: () => "<UK_PASSPORT_NUMBER-REDACTED>"
  },
  {
    id: "uk_nhs_number",
    pattern: new RegExp("\\b[0-9]{3} [0-9]{3} [0-9]{3}\\b", "g"),
    replacer: () => "<UK_NHS_NUMBER-REDACTED>"
  },
  {
    id: "uk_driving_license_number",
    pattern: new RegExp("\\b[A-Z]{2}[0-9]{6}[A-Z]?\\b", "g"),
    replacer: () => "<UK_DRIVING_LICENSE_NUMBER-REDACTED>"
  },
  {
    id: "uk_bank_account_number",
    pattern: new RegExp("\\b[0-9]{8}\\b", "g"),
    replacer: () => "<UK_BANK_ACCOUNT_NUMBER-REDACTED>"
  },
  {
    id: "password_(key=value)",
    pattern: new RegExp("(?:password|passwd|pwd|pass)\\s*=\\s*[^\\s,;]+", "i"),
    replacer: () => "<PASSWORD_(KEY=VALUE)-REDACTED>"
  },
  {
    id: "cvv",
    pattern: new RegExp("\\bcvv\\s*=\\s*\\d{3,4}\\b", "i"),
    replacer: () => "<CVV-REDACTED>"
  },
  {
    id: "card_expiry",
    pattern: new RegExp("\\bexpiry\\s*=\\s*(0[1-9]|1[0-2])/(\\d{2}|\\d{4})\\b", "i"),
    replacer: () => "<CARD_EXPIRY-REDACTED>"
  },
  {
    id: "currency_amount",
    pattern: new RegExp("\\$\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?", "g"),
    replacer: () => "<CURRENCY_AMOUNT-REDACTED>"
  },
  {
    id: "jdbc_url_with_credentials",
    pattern: new RegExp("jdbc:[^?\\s]+\\?[^\\s]*(?:user|username|uid)=[^&\\s]+&(?:password|pwd)=[^&\\s]+", "i"),
    replacer: () => "<JDBC_URL_WITH_CREDENTIALS-REDACTED>"
  },
  {
    id: "generic_secret_/_api_token",
    pattern: new RegExp("(?:api[_-]?key|secret|token|access[_-]?key)\\s*=\\s*[^\\s,;]+", "i"),
    replacer: () => "<GENERIC_SECRET_/_API_TOKEN-REDACTED>"
  },
  {
    id: "jwt",
    pattern: new RegExp("ey[A-Za-z0-9_-]{10,}\\.[A-Za-z0-9._-]{10,}\\.[A-Za-z0-9._-]{10,}", "g"),
    replacer: () => "<JWT-REDACTED>"
  }
];
