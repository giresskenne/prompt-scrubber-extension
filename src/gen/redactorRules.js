// AUTO-GENERATED by build.mjs â€“ DO NOT EDIT
export const rules = [
  {
    id: "aws_access_key",
    pattern: new RegExp("(?<![A-Z0-9])[A-Z0-9]{20}(?![A-Z0-9])", "g"),
    replacer: () => "AKIA****************"
  },
  {
    id: "aws_secret_key",
    pattern: new RegExp("(?<![A-Za-z0-9\\/+=])[A-Za-z0-9\\/+=]{40}(?![A-Za-z0-9\\/+=])", "g"),
    replacer: () => "<AWS_SECRET_KEY-REDACTED>"
  },
  {
    id: "stripe_secret",
    pattern: new RegExp("(sk_live|sk_test)_[0-9a-zA-Z]{24}", "g"),
    replacer: (m,...g)=>"$1_********************"
        .replace('$&',m)
        .replace(/\$(\d)/g,(_,i)=>g[i-1]||'')
  },
  {
    id: "credit_card",
    pattern: new RegExp("\\b(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})\\b", "g"),
    replacer: () => "<CREDIT_CARD-REDACTED>"
  },
  {
    id: "email",
    pattern: new RegExp("[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}", "i"),
    replacer: () => "<EMAIL-REDACTED>"
  },
  {
    id: "ipv4",
    pattern: new RegExp("\\b(?:(?:2(?:5[0-5]|[0-4][0-9])|1?[0-9]{1,2})\\.){3}(?:2(?:5[0-5]|[0-4][0-9])|1?[0-9]{1,2})\\b", "g"),
    replacer: () => "<IPV4-REDACTED>"
  },
  {
    id: "canadian_sin",
    pattern: new RegExp("\\b[0-9]{3}[- ]?[0-9]{3}[- ]?[0-9]{3}\\b", "g"),
    replacer: () => "<CANADIAN_SIN-REDACTED>"
  },
  {
    id: "us_social_security_number",
    pattern: new RegExp("\\b\\d{3}-?\\d{2}-?\\d{4}\\b", "g"),
    replacer: () => "<US_SOCIAL_SECURITY_NUMBER-REDACTED>"
  },
  {
    id: "us_phone_number",
    pattern: new RegExp("\\b\\(?\\d{3}\\)?[-. ]?\\d{3}[-. ]?\\d{4}\\b", "g"),
    replacer: () => "<US_PHONE_NUMBER-REDACTED>"
  },
  {
    id: "uk_national_insurance_number",
    pattern: new RegExp("\\b[A-Z]{2}[0-9]{6}[A-Z]?\\b", "g"),
    replacer: () => "<UK_NATIONAL_INSURANCE_NUMBER-REDACTED>"
  },
  {
    id: "uk_passport_number",
    pattern: new RegExp("\\b[A-PR-WY][0-9]{7}\\b", "g"),
    replacer: () => "<UK_PASSPORT_NUMBER-REDACTED>"
  },
  {
    id: "uk_nhs_number",
    pattern: new RegExp("\\b[0-9]{3} [0-9]{3} [0-9]{3}\\b", "g"),
    replacer: () => "<UK_NHS_NUMBER-REDACTED>"
  },
  {
    id: "uk_driving_license_number",
    pattern: new RegExp("\\b[A-Z]{2}[0-9]{6}[A-Z]?\\b", "g"),
    replacer: () => "<UK_DRIVING_LICENSE_NUMBER-REDACTED>"
  },
  {
    id: "uk_bank_account_number",
    pattern: new RegExp("\\b[0-9]{8}\\b", "g"),
    replacer: () => "<UK_BANK_ACCOUNT_NUMBER-REDACTED>"
  }
];
